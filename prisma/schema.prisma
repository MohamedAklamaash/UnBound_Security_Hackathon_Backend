// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @unique @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  password  String
  firstName String
  lastName  String?
  role      String  @default("USER")

  isVerified     Boolean  @default(false)
  Otp            String?  @default("")
  forgotPassword Boolean? @default(false)

  @@map("users")
}

model Model {
  id       String @id @default(uuid())
  provider String
  model    String

  chats Chat[]

  @@unique([provider, model])
}

model FileUploadRoute {
  id         String   @id @unique @default(uuid())
  fileType   String
  provider   String
  model      String
  createdAt  DateTime @default(now())
  
  @@map("file_upload_routes")
}


model Chat {
  id             String  @id @default(uuid())
  model          String
  provider       String
  prompt         String
  isFileUploaded Boolean @default(false)
  FileName       String? @default("")

  modelRelation Model @relation(fields: [provider, model], references: [provider, model], onDelete: Cascade)
}

model RoutingPolicy {
  id            String @id @unique @default(uuid())
  provider      String
  originalModel String
  regexPattern  String
  redirectModel String
  fileType      String @default("pdf")// might get an error here

  createdAt DateTime @default(now())

  @@map("routing_policies")
}

